{"version":3,"file":"Slider.Basic.Example.js","sourceRoot":"../src/","sources":["components/Slider/examples/Slider.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAA2D;AAC3D,0DAAqF;AAErF,IAAM,WAAW,GAA0B,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC;AAMvE,+BAA+B;AAC/B;IAAwC,8CAA6C;IAArF;QAAA,qEAsCC;QArCQ,WAAK,GAA6B,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;;IAqCxD,CAAC;IAnCQ,mCAAM,GAAb;QAAA,iBAkCC;QAjCC,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC;QAEtD,OAAO,CACL,oBAAC,aAAK,IAAC,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW;YAC7C,oBAAC,eAAM,OAAG;YACV,oBAAC,eAAM,IACL,KAAK,EAAC,yBAAyB,EAC/B,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,EAAE,EACP,IAAI,EAAE,EAAE,EACR,YAAY,EAAE,EAAE,EAChB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,UAAC,KAAa,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,EAC/C,UAAU,SACV;YACF,oBAAC,eAAM,IAAC,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,SAAG;YAC7G,oBAAC,eAAM,IACL,KAAK,EAAC,oBAAoB,EAC1B,GAAG,EAAE,EAAE,EACP,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,QAAQ,EAAE,UAAC,KAAa,IAAK,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC,EAAxB,CAAwB,EACrD,SAAS,EAAE,IAAI,GACf;YACF,oBAAC,eAAM,IACL,KAAK,EAAC,8BAA8B,EACpC,GAAG,EAAE,GAAG,EACR,aAAa,EAAE,UAAC,KAAa,IAAK,OAAG,KAAK,aAAU,EAAlB,CAAkB,EACpD,WAAW,EAAE,UAAC,KAAa,IAAK,OAAG,KAAK,MAAG,EAAX,CAAW,EAC3C,SAAS,EAAE,IAAI,GACf;YACF,oBAAC,eAAM,IAAC,KAAK,EAAC,kBAAkB,EAAC,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,SAAS,QAAC,cAAc,SAAG,CACjG,CACT,CAAC;IACJ,CAAC;IACH,yBAAC;AAAD,CAAC,AAtCD,CAAwC,KAAK,CAAC,SAAS,GAsCtD;AAtCY,gDAAkB","sourcesContent":["import * as React from 'react';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { IStackTokens, Stack, IStackStyles } from 'office-ui-fabric-react/lib/Stack';\n\nconst stackStyles: Partial<IStackStyles> = { root: { maxWidth: 300 } };\n\nexport interface ISliderBasicExampleState {\n  value: number;\n}\n\n// tslint:disable:jsx-no-lambda\nexport class SliderBasicExample extends React.Component<{}, ISliderBasicExampleState> {\n  public state: ISliderBasicExampleState = { value: 0 };\n\n  public render(): JSX.Element {\n    const stackTokens: IStackTokens = { childrenGap: 20 };\n\n    return (\n      <Stack tokens={stackTokens} styles={stackStyles}>\n        <Slider />\n        <Slider\n          label=\"Snapping slider example\"\n          min={0}\n          max={50}\n          step={10}\n          defaultValue={20}\n          showValue={true}\n          onChange={(value: number) => console.log(value)}\n          snapToStep\n        />\n        <Slider label=\"Disabled example\" min={50} max={500} step={50} defaultValue={300} showValue={true} disabled />\n        <Slider\n          label=\"Controlled example\"\n          max={10}\n          value={this.state.value}\n          onChange={(value: number) => this.setState({ value })}\n          showValue={true}\n        />\n        <Slider\n          label=\"Example with formatted value\"\n          max={100}\n          ariaValueText={(value: number) => `${value} percent`}\n          valueFormat={(value: number) => `${value}%`}\n          showValue={true}\n        />\n        <Slider label=\"Origin from zero\" min={-5} max={5} step={1} defaultValue={2} showValue originFromZero />\n      </Stack>\n    );\n  }\n}\n"]}