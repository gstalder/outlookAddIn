{"version":3,"file":"Keytips.Dynamic.Example.js","sourceRoot":"../src/","sources":["components/Keytip/examples/Keytips.Dynamic.Example.tsx"],"names":[],"mappings":";;;IAOA;QAA2C,iDAAsC;QAC/E,+BAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAKb;YA4CO,mBAAa,GAAG,UAAC,MAAc;gBACrC,OAAO;oBACL,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC,CAAC;gBACxC,CAAC,CAAC;YACJ,CAAC,CAAC;YAnDA,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,UAAU;aACvB,CAAC;;QACJ,CAAC;QAED,kCAAkC;QAC3B,sCAAM,GAAb;YACE,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;YAC3E,OAAO,CACL;gBACE,0fAMI;gBACJ,oBAAC,sBAAa,IACZ,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EACvC,WAAW,EAAE;wBACX,OAAO,EAAE,KAAK;wBACd,YAAY,EAAE,CAAC,KAAK,CAAC;wBACrB,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;wBACzC,kBAAkB,EAAE,IAAI;qBACzB,GACD;gBACF,oBAAC,sBAAa,IACZ,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,EACvC,WAAW,EAAE;wBACX,OAAO,EAAE,KAAK;wBACd,YAAY,EAAE,CAAC,KAAK,CAAC;wBACrB,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC;wBACzC,kBAAkB,EAAE,IAAI;qBACzB,GACD;gBACF;oBACE,oBAAC,sBAAa,IACZ,IAAI,EAAE,8BAA8B,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAC5D,WAAW,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE,GACrE,CACE,CACF,CACP,CAAC;QACJ,CAAC;QAOH,4BAAC;IAAD,CAAC,AAxDD,CAA2C,KAAK,CAAC,SAAS,GAwDzD;IAxDY,sDAAqB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\ninterface IKeytipsTestState {\n  currButton: string;\n}\n\nexport class KeytipsDynamicExample extends React.Component<{}, IKeytipsTestState> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      currButton: 'Button 1',\n    };\n  }\n\n  /* tslint:disable:jsx-no-lambda */\n  public render(): JSX.Element {\n    const startSequence = this.state.currButton === 'Button 1' ? 'gg1' : 'gg2';\n    return (\n      <div>\n        <p>\n          There is another special case where controls on the page will change other controls down the chain in the\n          keytip sequence. Take the case below; clicking Button 1 and Button 2 will update the text of Button3.\n          Triggering the keytip for Button 1 or Button 2 will then also change the keytip sequence of Button 3, because\n          it can be both a child of Button 1 or Button 2. For this to work fully, Button 1 and Button 2 should have\n          `hasDynamicChildren: true` in their keytip props\n        </p>\n        <DefaultButton\n          text=\"Button 1\"\n          onClick={this.setCurrButton('Button 1')}\n          keytipProps={{\n            content: 'GG1',\n            keySequences: ['gg1'],\n            onExecute: this.setCurrButton('Button 1'),\n            hasDynamicChildren: true,\n          }}\n        />\n        <DefaultButton\n          text=\"Button 2\"\n          onClick={this.setCurrButton('Button 2')}\n          keytipProps={{\n            content: 'GG2',\n            keySequences: ['gg2'],\n            onExecute: this.setCurrButton('Button 2'),\n            hasDynamicChildren: true,\n          }}\n        />\n        <div>\n          <DefaultButton\n            text={'Button 3, active button is: ' + this.state.currButton}\n            keytipProps={{ content: 'GG3', keySequences: [startSequence, 'gg3'] }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private setCurrButton = (button: string) => {\n    return () => {\n      this.setState({ currButton: button });\n    };\n  };\n}\n"]}